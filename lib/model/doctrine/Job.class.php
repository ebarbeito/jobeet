<?php

/**
 * Job
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Job extends BaseJob
{
	public function asArray($host)
	{
		return array(
			'category'     => $this->getCategory()->getName(),
			'type'         => $this->getType(),
			'company'      => $this->getCompany(),
			'logo'         => $this->getLogo() ? 'http://'.$host.'/uploads/jobs/'.$this->getLogo() : null,
			'url'          => $this->getUrl(),
			'position'     => $this->getPosition(),
			'location'     => $this->getLocation(),
			'description'  => $this->getDescription(),
			'how_to_apply' => $this->getHowToApply(),
			'expires_at'   => $this->getCreatedAt(),
		);
	}
	
	public function getCompanySlug()
	{
		return Jobeet::slugify($this->getCompany());
	}
	
	public function getLocationSlug()
	{
		return Jobeet::slugify($this->getLocation());
	}
	
	public function getPositionSlug()
	{
		return Jobeet::slugify($this->getPosition());
	}
	
	public function getTypeName()
	{
		$types = JobTable::getInstance()->getTypes();
		return $this->getType() ? $types[$this->getType()] : '';
	}
	
	public function getDaysBeforeExpires()
	{
		return ceil(($this->getDateTimeObject('expires_at')->format('U') - time()) / 86400);
	}
	
	public function isExpired()
	{
		return $this->getDaysBeforeExpires() < 0;
	}
	
	public function expiresSoon()
	{
		return $this->getDaysBeforeExpires() < 5;
	}
	
	public function extend($force = false)
	{
	  if (!$force && !$this->expiresSoon()) {
		  return false;
	  }
	  
	  $this->setExpiresAt(date('Y-m-d', time() + 86400 * sfConfig::get('app_active_days')));
	  $this->save();
	  return true;
	}
	
	public function publish()
	{
		$this->setIsActivated(true);
		$this->save();
	}
	
	public function delete(Doctrine_Connection $conn = null)
	{
		$index = JobTable::getLuceneIndex();
		foreach ($index->find('pk:' . $this->getId()) as $hit) {
			$index->delete($hit->id);
		}
		
		return parent::delete($conn);
	}
	
	public function save(Doctrine_Connection $conn = null)
	{
		if ($this->isNew() && !$this->getExpiresAt()) {
			$ndays = sfConfig::get('app_active_days');
			$now = $this->getCreatedAt() ? $this->getDateTimeObject('created_at')->format('U') : time();
			$this->setExpiresAt(date('Y-m-d H:i:s', $now + 86400 * $ndays));
		}
		
		if (!$this->getToken()) {
			$this->setToken(sha1($this->getEmail() . rand(11111, 99999)));
		}
		
		$conn = $conn ? $conn : $this->getTable()->getConnection();
		$conn->beginTransaction();
		try {
			$result = parent::save($conn);
			$this->updateLuceneIndex();
			$conn->commit();
			return $result;
		}
		catch (Exception $e) {
			$conn->rollBack();
			throw $e;
		}
	}
	
	public function updateLuceneIndex()
	{
		$index = JobTable::getLuceneIndex();
		
		// remove existing entries
		foreach ($index->find('pk:' . $this->getId()) as $hit) {
			$index->delete($hit->id);
		}
		
		// don't index expired and non-activated jobs
		if ($this->isExpired() || !$this->getIsActivated()) {
			return;
		}
		
		$doc = new Zend_Search_Lucene_Document();
		
		// store job primary key to identify it in the search results
		$doc->addField(Zend_Search_Lucene_Field::Keyword('pk', $this->getId()));
		
		// index job fields
		$doc->addField(Zend_Search_Lucene_Field::UnStored('position', $this->getPosition(), 'utf-8'));
		$doc->addField(Zend_Search_Lucene_Field::UnStored('company', $this->getCompany(), 'utf-8'));
		$doc->addField(Zend_Search_Lucene_Field::UnStored('location', $this->getLocation(), 'utf-8'));
		$doc->addField(Zend_Search_Lucene_Field::UnStored('description', $this->getDescription(), 'utf-8'));
		
		// add job to the index
		$index->addDocument($doc);
		$index->commit();
	}
}
